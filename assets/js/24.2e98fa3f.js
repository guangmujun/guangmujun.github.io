(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{600:function(t,n,e){"use strict";e.r(n);var a=e(7),r=Object(a.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"安装mysql"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装mysql"}},[t._v("#")]),t._v(" 安装MySQL")]),t._v(" "),e("p",[t._v("Linux环境MySQL的安装、配置以及远程连接和可视化等操作，请详细参考这篇"),e("a",{attrs:{href:"https://guangmujun.cn/archives/371",target:"_blank",rel:"noopener noreferrer"}},[t._v("博文"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"jdbc编程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jdbc编程"}},[t._v("#")]),t._v(" JDBC编程")]),t._v(" "),e("h3",{attrs:{id:"jdbc应用原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jdbc应用原理"}},[t._v("#")]),t._v(" JDBC应用原理")]),t._v(" "),e("p",[t._v("为了解决不同数据库各自为政的问题，Java设计了统一的规范JDBC，只要程序员按照JDBC的方法操作，任何数据库都可以在JDBC框架下正常访问。\nJDBC（Java DataBase\nConnectivity，Java数据库连接），由JDK内部的数据库管理工具类组成，提供标准的数据库操作方法，使用统一的方式开展数据库编程，提高数据库编程的开发效率。")]),t._v(" "),e("h3",{attrs:{id:"连接器设置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#连接器设置"}},[t._v("#")]),t._v(" 连接器设置")]),t._v(" "),e("p",[t._v("JDBC屏蔽了相关的内部细节，在具体操作数据库之前，需要额外的引入对应的数据库连接器，即导入对应数据库的JAR包")]),t._v(" "),e("h4",{attrs:{id:"下载连接器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#下载连接器"}},[t._v("#")]),t._v(" 下载连接器")]),t._v(" "),e("p",[t._v("MySQL的Java版本连接器 网址：https://dev.mysql.com/downloads/connector/j/")]),t._v(" "),e("ol",[e("li",[t._v("查看ubuntu版本的命令：")])]),t._v(" "),e("p",[t._v("​"),e("br"),t._v("\ncat /proc/version")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://my-imags.oss-cn-shanghai.aliyuncs.com/pic/20201217143355.png",alt:""}})]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("下载对应版本的连接器")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://my-imags.oss-cn-shanghai.aliyuncs.com/pic/20201217143432.png",alt:""}})]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("不用登陆，点击此处，直接下载")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://my-imags.oss-cn-shanghai.aliyuncs.com/pic/20201217143507.png",alt:""}})]),t._v(" "),e("h4",{attrs:{id:"安装连接器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装连接器"}},[t._v("#")]),t._v(" 安装连接器")]),t._v(" "),e("p",[t._v("我这里下载的位"),e("code",[t._v(".deb")]),t._v("文件，在文件下载目录，打开终端，输入以下命令，进行安装：")]),t._v(" "),e("p",[t._v("​"),e("br"),t._v("\nwyh@ubuntu:~/IdeaProjects$ sudo dpkg -i mysql-connector-java_8.0.22-1ubuntu20.04_all.deb")]),t._v(" "),e("p",[t._v("安装完成后，输入以下命令，查看安装的数据库JAR包所在的路径")]),t._v(" "),e("p",[t._v("​"),e("br"),t._v("\nwyh@ubuntu:~/IdeaProjects$ dpkg -L mysql-connector-java")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://my-imags.oss-cn-shanghai.aliyuncs.com/pic/20201217144914.png",alt:""}})]),t._v(" "),e("h4",{attrs:{id:"导入jar包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#导入jar包"}},[t._v("#")]),t._v(" 导入JAR包")]),t._v(" "),e("p",[e("strong",[t._v("IDEA把数据库连接的JAR文件添加到Java工程的依赖库中")]),t._v(" ，之后即可在Java代码中操作MySQL数据库 点击【File】，点击【Project\nStructure】 点击【Modules】，点击【Dependencies】，点击【+】，选择【JARs or Directories…】\n"),e("img",{attrs:{src:"https://my-imags.oss-cn-shanghai.aliyuncs.com/pic/20201217145229.png",alt:""}}),t._v("\n输入或者选择前述查看的mysql-connector的JAR包的路径，然后点击OK，完成配置 ![](https://my-imags.oss-cn-\nshanghai.aliyuncs.com/pic/20201217145341.png)")]),t._v(" "),e("h3",{attrs:{id:"连接数据库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#连接数据库"}},[t._v("#")]),t._v(" 连接数据库")]),t._v(" "),e("ul",[e("li",[t._v("加载数据库驱动")]),t._v(" "),e("li",[t._v("根据用户名和密码连接数据库")])]),t._v(" "),e("p",[t._v("Java编程实现对MySQL数据库的连接")]),t._v(" "),e("p",[t._v("​"),e("br"),t._v("\npackage com.jiangsu.nanjing;")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('import java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.SQLException;\n\npublic class TestConnect {\n    public static void main(String[] args){\n        TestMySQL();\n    }\n\n    private static void TestMySQL(){\n        String driver_class = "com.mysql.cj.jdbc.Driver";  //数据库的驱动类\n        //数据库的连接地址，包括：数据库类型、IP、端口号、名称、时区\n        String dbUrl = "jdbc:mysql://192.168.88.129:3306/product?serverTimezone=GMT%2B8";\n        String dbUsername = "root";       //数据库的用户名\n        String dbPassword = "MyPass@123"; //数据库的密码\n        try{\n            Class.forName(driver_class);  //加载数据库的驱动\n            //连接数据库\n            try(Connection conn = DriverManager.getConnection(dbUrl, dbUsername, dbPassword)){\n                String desc = String.format("Database: %s, Connect Status: %s, Auto Commit: %s",\n                        conn.getCatalog(),\n                        conn.isClosed()?"Close":"Open",\n                        conn.getAutoCommit()?"Open":"Close");\n                System.out.println(desc);\n            }catch (SQLException e){\n                e.printStackTrace();\n            }\n        }catch (ClassNotFoundException e){\n            e.printStackTrace();\n        }\n    }\n}\n')])])]),e("p",[t._v("​")]),t._v(" "),e("h3",{attrs:{id:"管理数据库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#管理数据库"}},[t._v("#")]),t._v(" 管理数据库")]),t._v(" "),e("h4",{attrs:{id:"创建表格"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建表格"}},[t._v("#")]),t._v(" 创建表格")]),t._v(" "),e("p",[t._v("​"),e("br"),t._v("\npackage com.jiangsu.nanjing;")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('import javax.swing.plaf.nimbus.State;\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.SQLException;\nimport java.sql.Statement;\n\npublic class TestConnect {\n    public static void main(String[] args){\n        TestMySQL();\n    }\n\n    private static void TestMySQL(){\n        String driver_class = "com.mysql.cj.jdbc.Driver";  //数据库的驱动类\n        //数据库的连接地址，包括：数据库类型、IP、端口号、名称、时区\n        String dbUrl = "jdbc:mysql://192.168.88.129:3306/product?serverTimezone=GMT%2B8";\n        String dbUsername = "root";       //数据库的用户名\n        String dbPassword = "MyPass@123"; //数据库的密码\n        try{\n            Class.forName(driver_class);  //加载数据库的驱动\n            //连接数据库\n            try(Connection conn = DriverManager.getConnection(dbUrl, dbUsername, dbPassword)){\n                //输出连接信息\n                String desc = String.format("Database: %s, Connect Status: %s, Auto Commit: %s",\n                        conn.getCatalog(),\n                        conn.isClosed()?"Close":"Open",\n                        conn.getAutoCommit()?"Open":"Close");\n                System.out.println(desc);\n                //创建连接的执行报告\n                Statement stmt = conn.createStatement();\n                //执行SQL操作\n                createTable(stmt);\n\n            }catch (SQLException e){\n                e.printStackTrace();\n            }\n        }catch (ClassNotFoundException e){\n            e.printStackTrace();\n        }\n    }\n\n    // 创建表格\n    private static void createTable(Statement stmt) throws SQLException{\n        String sql = "create table teacher("            //"+"这个只是起到一个语句之间的连接作用\n                +" id INT NOT NULL,"\n                +" name VARCHAR(32) NOT NULL,"\n                +" sex INT NOT NULL,"\n                +" course VARCHAR(32) NOT NULL,"\n                +" PRIMARY KEY (id))"\n                +" comment= \'Teacher Info Table\';";\n        int count = stmt.executeUpdate(sql);  // 返回受影响的记录的数量\n        System.out.println(count);\n    }\n\n}\n')])])]),e("p",[t._v("​")]),t._v(" "),e("h4",{attrs:{id:"插入数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#插入数据"}},[t._v("#")]),t._v(" 插入数据")]),t._v(" "),e("p",[t._v("​"),e("br"),t._v("\n//插入记录\nprivate static void insertRecord(Statement stmt) throws SQLException{\nList sqlList = Arrays.asList(\n\"insert into teacher VALUES (1, 'Li', 1, 'Math')\",\n\"insert into teacher VALUES (2, 'Wang', 0, 'English')\",\n\"insert into teacher VALUES (3, 'Han', 1, 'Chinese')\"\n);\nfor (String sql : sqlList){\nint count = stmt.executeUpdate(sql);\nSystem.out.println(count);\n}")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("    }\n")])])]),e("h4",{attrs:{id:"更新数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更新数据"}},[t._v("#")]),t._v(" 更新数据")]),t._v(" "),e("p",[t._v("​"),e("br"),t._v("\n//更新数据\nprivate static void updateRecord(Statement stmt) throws SQLException{\nString sql = \"update teacher set course='History' where sex ='1'\";\nint count = stmt.executeUpdate(sql);\nSystem.out.println(count);\n}")]),t._v(" "),e("h3",{attrs:{id:"查询数据库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查询数据库"}},[t._v("#")]),t._v(" 查询数据库")]),t._v(" "),e("p",[t._v("使用单独的exceuteQuery方法，该方法的返回值是ResultSet类型")]),t._v(" "),e("p",[t._v("​"),e("br"),t._v('\n//查询性别分组\nprivate static void showRecordGroupBySex(){\nString driver_class = "com.mysql.cj.jdbc.Driver";  //数据库的驱动类\n//数据库的连接地址，包括：数据库类型、IP、端口号、名称、时区\nString dbUrl = "jdbc:mysql://192.168.88.129:3306/product?serverTimezone=GMT%2B8";\nString dbUsername = "root";       //数据库的用户名\nString dbPassword = "MyPass@123"; //数据库的密码\nString sql = "select sex, count(sex) count from teacher group by sex order by sex asc";\ntry{\nClass.forName(driver_class);  //加载数据库的驱动\n//连接数据库\ntry(Connection conn = DriverManager.getConnection(dbUrl, dbUsername, dbPassword);\nStatement stmt = conn.createStatement();\nResultSet rs = stmt.executeQuery(sql)){\nwhile (rs.next()){  //循环遍历结果集里面的所有记录\nint sex = rs.getInt("sex");  //获取指定字段的整型值\nint count = rs.getInt("count");\nString desc = String.format("The Number of %s Teacher is %s.",\nsex==0 ? "Man" : "Women", count);\nSystem.out.println(desc);\n}\n}catch (SQLException e){\ne.printStackTrace();\n}\n}catch (ClassNotFoundException e){\ne.printStackTrace();\n}\n}')]),t._v(" "),e("h3",{attrs:{id:"预报告preparedstatement"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#预报告preparedstatement"}},[t._v("#")]),t._v(" 预报告PreparedStatement")]),t._v(" "),e("p",[t._v("在写SQL语句时，可以把查询条件作为输入参数传进来，正常输入一个正常的参数传进来没问题，但是如果，这个输入否参数被设置为一些特殊的语句，那输入到函数后，这个输入参数就与函数中的原有SQL语句合并生成新的SQL语句，由此便可能会产生安全问题，此类的SQL缺陷称为SQL注入漏洞。\nJDBC设计了一种预报告机制，在创建预报告对象时就要设定SQL语句，并且SQL里面的动态参数以问号代替")]),t._v(" "),e("p",[t._v("​"),e("br"),t._v('\nString sql = "delete from teacher where course=?";\nPreparedStatement stmt = conn.prepareStatement(sql);')]),t._v(" "),e("p",[t._v("使用setString方法设置对应序号的参数值")]),t._v(" "),e("p",[t._v("​"),e("br"),t._v('\nstmt.setString(1, "化学");\nstmt.setString(1, "\'\' or 1=1")')]),t._v(" "),e("h2",{attrs:{id:"数据库连接池"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据库连接池"}},[t._v("#")]),t._v(" 数据库连接池")]),t._v(" "),e("h3",{attrs:{id:"出现的原由"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#出现的原由"}},[t._v("#")]),t._v(" 出现的原由")]),t._v(" "),e("p",[t._v("对于数据库连接的管理，每次操作完数据都要关闭连接，频繁的开关数据库连接会加重CPU的负担。\n类似于线程池的概念，提出连接池，事先在一个池子中容纳若干连接，需要使用时便从中挑选一个。\nJava没有推出类似连接池的工具，于是第三方蜂拥而起，国外的C3P0，阿里巴巴的Druid")]),t._v(" "),e("h3",{attrs:{id:"c3p0连接池"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#c3p0连接池"}},[t._v("#")]),t._v(" C3P0连接池")]),t._v(" "),e("p",[t._v("在Java Web领域应用良好，但不适用于大型应用场合")]),t._v(" "),e("h3",{attrs:{id:"druid连接池"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#druid连接池"}},[t._v("#")]),t._v(" Druid连接池")]),t._v(" "),e("p",[e("strong",[t._v("准备操作：")]),t._v("\n因为Druid是第三方提供，所以想要使用Druid，则需要导入相关的JAR到项目中，下载JAR包，点击"),e("a",{attrs:{href:"https://guangmujun.cn/archives/383",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),e("OutboundLink")],1),t._v("，导入JAR包的操作可以参考本文这个章节的内容："),e("a",{attrs:{href:"https://guangmujun.cn/archives/385#JAR",target:"_blank",rel:"noopener noreferrer"}},[t._v("导入JAR包"),e("OutboundLink")],1),t._v(" "),e("strong",[t._v("两个步骤：")])]),t._v(" "),e("ol",[e("li",[t._v("初始化连接池")])]),t._v(" "),e("p",[t._v("​"),e("br"),t._v("\n//声明Durid连接池的对象\nprivate static DruidDataSource dataSource;")]),t._v(" "),e("p",[t._v("​"),e("br"),t._v("\n​"),e("br"),t._v('\n//初始化连接池\nprivate static void initDataSource(){\nString driver_class = "com.mysql.cj.jdbc.Driver";  //数据库的驱动类\n//数据库的连接地址，包括：数据库类型、IP、端口号、名称、时区\nString dbUrl = "jdbc:mysql://192.168.88.129:3306/product?serverTimezone=GMT%2B8";\nString dbUsername = "root";       //数据库的用户名\nString dbPassword = "MyPass@123"; //数据库的密码\ndataSource = new DruidDataSource();             //创建连接池\ndataSource.setDriverClassName(driver_class);\ndataSource.setUrl(dbUrl);\ndataSource.setUsername(dbUsername);\ndataSource.setPassword(dbPassword);\ndataSource.setInitialSize(1);                   //设置连接池的初始大小\ndataSource.setMinIdle(1);                       //设置连接池大小的下限\ndataSource.setMaxActive(20);                    //设置连接池大小的上限\n}')]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("处理连接")])]),t._v(" "),e("p",[t._v("​"),e("br"),t._v('\n//显示性别分组\nprivate static void showRecordGroupBySex(){\nString sql = "select sex, count(1) count from teacher group by sex order by sex asc";\ntry(DruidPooledConnection conn = dataSource.getConnection();\nStatement stmt = conn.createStatement();\nResultSet rs = stmt.executeQuery(sql)){\nwhile (rs.next()){\nint sex = rs.getInt("sex");\nint count = rs.getInt("count");\nString desc = String.format("The Number of %s Teacher is %s",\nsex==0?"Man":"Woman", count);\nSystem.out.println(desc);\n}\nSystem.out.println(dataSource.getActiveCount());\nSystem.out.println(dataSource.getConnectCount());\nSystem.out.println(dataSource.getPoolingCount());\n}catch (SQLException e){\ne.printStackTrace();\n}\n}')]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("主函数")])]),t._v(" "),e("p",[t._v("​"),e("br"),t._v("\npublic static void main(String[] args){\ninitDataSource();\nfor (int i=0; i<3; i++){\nshowRecordGroupBySex();\n}\n}")]),t._v(" "),e("h2",{attrs:{id:"资源下载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#资源下载"}},[t._v("#")]),t._v(" 资源下载")]),t._v(" "),e("p",[t._v("Druid的JAR包，"),e("a",{attrs:{href:"https://guangmujun.cn/archives/383",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载连接"),e("OutboundLink")],1)])])}),[],!1,null,null,null);n.default=r.exports}}]);