(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{617:function(t,a,e){"use strict";e.r(a);var v=e(7),l=Object(v.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"时间工具date"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#时间工具date"}},[t._v("#")]),t._v(" 时间工具Date")]),t._v(" "),e("h2",{attrs:{id:"日历工具calendar"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#日历工具calendar"}},[t._v("#")]),t._v(" 日历工具Calendar")]),t._v(" "),e("h2",{attrs:{id:"本地日期时间类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#本地日期时间类型"}},[t._v("#")]),t._v(" 本地日期时间类型")]),t._v(" "),e("p",[t._v("无论是Date还是迟Calendar，在解决复杂问题时的编码都很别扭，故在Java8时推出了全新的本地日期时间类型。")]),t._v(" "),e("ol",[e("li",[t._v("LocalDate：本地日期类型")]),t._v(" "),e("li",[t._v("LocalTime：本地时间类型")]),t._v(" "),e("li",[t._v("LocalDateTime：本地日期时间类型")])]),t._v(" "),e("p",[t._v("获取本地当前时间：")]),t._v(" "),e("p",[t._v("​"),e("br"),t._v("\nprivate static void showLocalDateTime(){\nLocalDateTime datetime = LocalDateTime.now();\nSystem.out.println(datetime.toString());\n}")]),t._v(" "),e("p",[t._v("对于日期时间的操作，包括：")]),t._v(" "),e("ul",[e("li",[t._v("获取年月日时分秒")]),t._v(" "),e("li",[t._v("创建指定日期时间的本地实例，以及时间增减操作等")]),t._v(" "),e("li",[t._v("日期时间的早晚关系判断")]),t._v(" "),e("li",[t._v("本地日期时间与字符串的互相转换")])])])}),[],!1,null,null,null);a.default=l.exports}}]);