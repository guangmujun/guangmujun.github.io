(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{611:function(n,t,e){"use strict";e.r(t);var r=e(7),o=Object(r.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h2",{attrs:{id:"网络交互的数据格式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#网络交互的数据格式"}},[n._v("#")]),n._v(" 网络交互的数据格式")]),n._v(" "),e("ul",[e("li",[n._v("URL：只能进行简单的键值对参数传递")]),n._v(" "),e("li",[n._v("JSON：可以传递结构化数据，数组形式的参数")]),n._v(" "),e("li",[n._v("XML：出了传输字符串文本外，还可以传输特征属性")])]),n._v(" "),e("h3",{attrs:{id:"url"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#url"}},[n._v("#")]),n._v(" URL")]),n._v(" "),e("ol",[e("li",[e("p",[n._v("Uniform Resource Locator，统一资源定位符")])]),n._v(" "),e("li",[e("p",[e("code",[n._v("https://www.news.cn:8080/public/getvalidatecode?time=123#index")])])])]),n._v(" "),e("ul",[e("li",[e("code",[n._v("https")]),n._v("：协议")]),n._v(" "),e("li",[e("code",[n._v("www.news.cn:8080")]),n._v("：授权 = 域名+端口")]),n._v(" "),e("li",[e("code",[n._v("public/getvalidatecode?time=123")]),n._v(": 文件名称 = 路径+请求参数")]),n._v(" "),e("li",[e("code",[n._v("#index")]),n._v("：引用位置，自动滚动到指定位置的区域")])]),n._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[n._v("HTTP网络协议")])]),n._v(" "),e("ul",[e("li",[n._v("Hypertext Transfer Protocol，超文本传输协议")])]),n._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[e("p",[n._v("URL编码与解码")])]),n._v(" "),e("li",[e("p",[n._v("检测域名的连通性")]),n._v(" "),e("p",[n._v("package com.jiangsu.nanjing;")])])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('import java.net.InetAddress;\nimport java.net.UnknownHostException;\n\npublic class TestAddress {\n   public static void main(String[] args){\n       boolean res = testHost("www.baidu.com");\n       System.out.println(res);\n   }\n\n   private static boolean testHost(String host){\n       try{\n           //根据域名或IP获得对应的网络地址对象\n           InetAddress inet = InetAddress.getByName(host);\n       }catch (UnknownHostException e){\n           e.printStackTrace();\n           return false;\n       }\n       return true;\n   }\n}\n')])])]),e("p",[n._v("​")]),n._v(" "),e("h3",{attrs:{id:"json"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#json"}},[n._v("#")]),n._v(" JSON")]),n._v(" "),e("ol",[e("li",[e("p",[n._v("Java的开发包中没有处理JSON的工具，添加第三方JAR：阿里巴巴的FastJson")])]),n._v(" "),e("li",[e("p",[n._v("JSON数组通过方括号表达，方括号内部以此罗列各个元素，具体格式："),e("code",[n._v("数组的键明：[元素1，元素2，元素3]")])])]),n._v(" "),e("li",[e("p",[n._v("JSON文件的解析")]),n._v(" "),e("p",[n._v("package com.jiangsu.nanjing;")])])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('import com.alibaba.fastjson.JSONArray;\nimport com.alibaba.fastjson.JSONObject;\n\npublic class TestJson {\n   public static void main(String[] args){\n       String json = "{\\n" +\n               "  \\"user_info\\": {\\n" +\n               "    \\"name\\": \\"siwuxie\\",\\n" +\n               "    \\"address\\": \\"taohuadaoshuiliandong123hao\\",\\n" +\n               "    \\"phone\\": \\"79867786987\\"\\n" +\n               "  },\\n" +\n               "  \\"goods_list\\": [\\n" +\n               "    {\\n" +\n               "      \\"goods_name\\": \\"Mate30\\",\\n" +\n               "      \\"goods_number\\": 1,\\n" +\n               "      \\"goods_price\\": 8888\\n" +\n               "    },\\n" +\n               "    {\\n" +\n               "      \\"goods_name\\": \\"gelizhongyangkongtiao\\",\\n" +\n               "      \\"goods_number\\": 1,\\n" +\n               "      \\"goods_price\\": 58000\\n" +\n               "    },\\n" +\n               "    {\\n" +\n               "      \\"goods_name\\": \\"hongqintingpixie\\",\\n" +\n               "      \\"goods_number\\": 3,\\n" +\n               "      \\"goods_price\\": 999\\n" +\n               "    }\\n" +\n               "  ]\\n" +\n               "}";\n       testParserJson(json);\n   }\n\n   private static GoodsOrder testParserJson(String json){\n       GoodsOrder order = new GoodsOrder();\n       JSONObject object = JSONObject.parseObject(json);\n       JSONObject user_info = object.getJSONObject("user_info");\n       order.user_info.name = user_info.getString("name");\n       order.user_info.phone = user_info.getString("phone");\n       order.user_info.address = user_info.getString("address");\n       System.out.println(order.user_info.name);\n\n       JSONArray good_list = object.getJSONArray("goods_list");\n       for (int i=0; i<good_list.size(); i++){\n           GoodsItem item = new GoodsItem();\n           JSONObject goods_item = (JSONObject) good_list.get(i);\n           item.goods_name = goods_item.getString("goods_name");\n           item.goods_number = goods_item.getIntValue("goods_number");\n           item.goods_price = goods_item.getDoubleValue("goods_price");\n           System.out.println(item.goods_name);\n           order.goods_list.add(item);  //往商品清单中添加指定商品对象\n       }\n\n       return order;\n   }\n}\n')])])]),e("p",[n._v("​")]),n._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[e("p",[n._v("自动转换，将JSON串自动转换成实体对象")]),n._v(" "),e("p",[n._v("private static GoodsOrder testParserJsonAgain(String json){\nJSONObject object = JSONObject.parseObject(json);\nGoodsOrder order = (GoodsOrder) JSONObject.toJavaObject(object, GoodsOrder.class);\nSystem.out.println(order.user_info.name);\nreturn order;\n}")])]),n._v(" "),e("li",[e("p",[n._v("实体对象转化为JSON串，一行代码")]),n._v(" "),e("p",[n._v('public static void main(String[] args){\nString json = "{\\n" +\n"  "user_info": {\\n" +\n"    "name": "siwuxie",\\n" +\n"    "address": "taohuadaoshuiliandong123hao",\\n" +\n"    "phone": "79867786987"\\n" +\n"  },\\n" +\n"  "goods_list": [\\n" +\n"    {\\n" +\n"      "goods_name": "Mate30",\\n" +\n"      "goods_number": 1,\\n" +\n"      "goods_price": 8888\\n" +\n"    },\\n" +\n"    {\\n" +\n"      "goods_name": "gelizhongyangkongtiao",\\n" +\n"      "goods_number": 1,\\n" +\n"      "goods_price": 58000\\n" +\n"    },\\n" +\n"    {\\n" +\n"      "goods_name": "hongqintingpixie",\\n" +\n"      "goods_number": 3,\\n" +\n"      "goods_price": 999\\n" +\n"    }\\n" +\n"  ]\\n" +\n"}";\nGoodsOrder order = testParserJsonAgain(json);\nString toJson = JSONObject.toJSONString(order);\nSystem.out.println(toJson);\n}')])])]),n._v(" "),e("h3",{attrs:{id:"xml"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xml"}},[n._v("#")]),n._v(" XML")]),n._v(" "),e("ol",[e("li",[e("p",[n._v("eXtensible Markup Language，可扩展标记语言")])]),n._v(" "),e("li",[e("p",[n._v("在Java中传统的XML解析方式有，DOM和SAX两种，DOM把整个XML报文读进来，SAX根据节点名称从报文起点开始扫描，但是每次都要从头找起")])]),n._v(" "),e("li",[e("p",[n._v("JDK集成了DOM和SAX，但其解析过程艰深晦涩，应用比较多的是XML解析工具第三方包Dom4j，遵循DOM规则")])]),n._v(" "),e("li",[e("p",[n._v("解析xml")]),n._v(" "),e("ol",[e("li",[n._v("创建SAXReader阅读器对象\n2. 把字符串形式的XML报文转换为输入流对象\n3. 命令阅读器对象从输入流中读取Document文档对象\n4. 获得文档对象的根节点Element\n5. 从根节点往下依次解析每个层级的节点值")])]),n._v(" "),e("p",[n._v("package com.jiangsu.nanjing;")])])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('import org.dom4j.Document;\nimport org.dom4j.Element;\nimport org.dom4j.io.SAXReader;\n\nimport javax.xml.parsers.SAXParser;\nimport java.io.ByteArrayInputStream;\nimport java.io.InputStream;\nimport java.nio.charset.Charset;\nimport java.util.List;\n\npublic class TestDom4j {\n   public static void main(String[] args){\n       String xml = "<?xml version=\\"1.0\\" encoding=\\"GBK\\" ?>\\n" +\n               "<order>\\n" +\n               "    <user_info>\\n" +\n               "        <name type=\\"String\\">siwuxie</name>\\n" +\n               "        <address type=\\"String\\">jkljljlkjl</address>\\n" +\n               "        <phone type=\\"String\\">16546415</phone>\\n" +\n               "    </user_info>\\n" +\n               "    <goods_list>\\n" +\n               "        <goods_item>\\n" +\n               "            <goods_name type=\\"String\\">Mate30</goods_name>\\n" +\n               "        </goods_item>\\n" +\n               "        <goods_item>\\n" +\n               "            <goods_name type=\\"String\\">gelikongtiao</goods_name>\\n" +\n               "        </goods_item>\\n" +\n               "    </goods_list>\\n" +\n               "</order>";\n       testParserByDom4j(xml);\n   }\n\n   private static GoodsOrder testParserByDom4j(String xml){\n       GoodsOrder order = new GoodsOrder();\n       SAXReader reader = new SAXReader();\n       try (InputStream is = new ByteArrayInputStream(xml.getBytes())){\n           Document document = reader.read(is);\n           Element root = document.getRootElement();\n           Element user_info = root.element("user_info");\n           order.user_info.name = user_info.element("name").getText();\n           System.out.println(order.user_info.name);\n\n           List<Element> good_list = root.element("goods_list").elements();\n           for (int i=0; i<good_list.size(); i++){\n               Element goods_item = good_list.get(i);\n               GoodsItem item = new GoodsItem();\n               item.goods_name = goods_item.element("goods_name").getText();\n               System.out.println(item.goods_name);\n           }\n       }catch (Exception e){\n           e.printStackTrace();\n       }\n       return order;\n   }\n}\n')])])]),e("p",[n._v("​")]),n._v(" "),e("ol",{attrs:{start:"5"}},[e("li",[e("p",[n._v("解析xml中的字段属性")]),n._v(" "),e("p",[n._v('private static void printValueAndAttr(Element parent, String node_name, String attr_name){\nElement element = parent.element(node_name);//获取父节点下指定名称的子节点\nString node_value = element.getText();//获取子节点的值\nString attr_value = "";\nAttribute attr = element.attribute(attr_name);//根据属性名称字段获取子节点的对应属性对象\nif (attr != null){\nattr_value = attr.getText();\n}\nSystem.out.println(attr_value);\n}')])])]),n._v(" "),e("p",[n._v("​"),e("br"),n._v('\nprintValueAndAttr(user_info, "name", "type");')]),n._v(" "),e("h2",{attrs:{id:"http接口访问"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http接口访问"}},[n._v("#")]),n._v(" HTTP接口访问")]),n._v(" "),e("h3",{attrs:{id:"get"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#get"}},[n._v("#")]),n._v(" GET")]),n._v(" "),e("p",[n._v("TCP/IP协议组：")]),n._v(" "),e("ol",[e("li",[n._v("协议分为三个层次：\n"),e("ol",[e("li",[n._v("网络层：包括IP协议、ICMP、ARP\n2. 传输层：TCP、UDP\n3. 应用层：FTP、HTTP、TELNET、SMTP")])])])]),n._v(" "),e("p",[n._v("实例：")]),n._v(" "),e("p",[n._v("​"),e("br"),n._v("\n//将输入流转化为字符串\npackage com.jiangsu.nanjing;")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("import java.io.IOException;\nimport java.io.InputStream;\n\npublic class StreamUtil {\n    public static String isToString(InputStream is) throws IOException{\n        byte[] bytes = new byte[is.available()];//创建临时存放的字节数组\n        is.read(bytes);//从输入流中读取字节数组\n        return new String(bytes);//把字节数组转换为字符串并返回\n    }\n}\n")])])]),e("p",[n._v("​"),e("br"),n._v("\n​"),e("br"),n._v("\n​"),e("br"),n._v("\npackage com.jiangsu.nanjing;")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('import java.net.HttpURLConnection;\nimport java.net.URL;\nimport java.util.stream.Stream;\n\n//对指定URL发起GET调用\npublic class TestUrlConnection {\n    public static void main(String[] args){\n        testCallGet("http://www.weather.com.cn/data/sk/101010100.html");\n\n    }\n\n    private static void testCallGet(String callUrl){\n        try {\n            URL url = new URL(callUrl);//根据网址字符串构建URL对象\n            //打开URL对象的网络连接，并返回HTTPURLConnection连接对象\n            HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n            conn.setRequestMethod("GET");\n            conn.setConnectTimeout(5000);//连接的超时时间\n            conn.setReadTimeout(5000);//读取应答数据的超时时间\n            conn.connect();\n            System.out.println(String.format("%d, %s, %s", \n                    conn.getContentLength(),//内容长度\n                    conn.getContentType(),//内容类型\n                    conn.getContentEncoding()));//压缩方式\n            //从输入流中获取默认的字符串数据\n            String content = StreamUtil.isToString(conn.getInputStream());\n            System.out.println(String.format("%d, %s", conn.getResponseCode(), content));\n            conn.disconnect();\n        }catch (Exception e){\n            e.printStackTrace();\n        }\n    }\n}\n')])])]),e("p",[n._v("​")]),n._v(" "),e("p",[n._v("补充：")]),n._v(" "),e("ul",[e("li",[n._v("字符编码或者数据压缩编码标准不同时，会出错")]),n._v(" "),e("li",[n._v("GET不仅支持从服务地址获取应答报文，而且支持直接下载网络文件")])]),n._v(" "),e("h3",{attrs:{id:"post"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#post"}},[n._v("#")]),n._v(" POST")]),n._v(" "),e("p",[n._v("业务参数放到请求报文中,也支持上传文件")]),n._v(" "),e("p",[n._v("​"),e("br"),n._v('\ntestCallPost("http://localhost:8080/test", "How are you?");')]),n._v(" "),e("p",[n._v("​"),e("br"),n._v("\n​"),e("br"),n._v('\nprivate static void testCallPost(String callUrl, String body){\ntry{\nURL url = new URL(callUrl);\nHttpURLConnection conn = (HttpURLConnection) url.openConnection();\nconn.setRequestMethod("POST");\nconn.setRequestProperty("Content-Type", "application/json");\nconn.setDoOutput(true);\nconn.connect();\nOutputStream os = conn.getOutputStream();\nos.write(body.getBytes());\nSystem.out.println(String.format("%s, %s, %s", conn.getHeaderField("Content-Length"),\nconn.getHeaderField("Content-Type"),\nconn.getHeaderField("Content-Encoding")));\nString content = StreamUtil.getUnzipString(conn);\nSystem.out.println(String.format("%d, %s", conn.getResponseCode(), content));\nconn.disconnect();\n}catch (Exception e){\ne.printStackTrace();\n}\n}')]),n._v(" "),e("p",[n._v("​"),e("br"),n._v("\n​"),e("br"),n._v("\npackage com.jiangsu.nanjing;")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('import java.io.ByteArrayOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.net.HttpURLConnection;\nimport java.util.zip.GZIPInputStream;\n\npublic class StreamUtil {\n    public static String isToString(InputStream is) throws IOException{\n        byte[] bytes = new byte[is.available()];\n        is.read(bytes);\n        return new String(bytes);\n    }\n\n    public static String isToStringForLarge(InputStream is, String charset){\n        String result = "";\n        try(ByteArrayOutputStream baos = new ByteArrayOutputStream()){\n            int i = -1;\n            while ((i = is.read()) != -1){\n                baos.write(i);\n                byte[] data = baos.toByteArray();\n                result = new String(data, charset);\n            }\n        }catch (Exception e){\n            e.printStackTrace();\n        }\n        return result;\n    }\n\n    public static String getUnzipString(HttpURLConnection conn) throws IOException{\n        String contentType = conn.getContentType();\n        String charset = "UTF-8";\n        if (contentType != null){\n            if (contentType.toLowerCase().contains("charset=\'gbk")){\n                charset = "GBK";\n            }else if (contentType.toLowerCase().contains("charset=gb2312")){\n                charset = "GB2312";\n            }\n        }\n        String contentEncoding = conn.getContentEncoding();\n        InputStream is = conn.getInputStream();\n        String result = "";\n        if (contentEncoding != null && contentEncoding.contains("gzip")){\n            try(GZIPInputStream gis = new GZIPInputStream(is)){\n                result = isToStringForLarge(gis, charset);\n            }catch (Exception e){\n                e.printStackTrace();\n            }\n        }else {\n            result = isToStringForLarge(is, charset);\n        }\n        return result;\n    }\n}\n')])])]),e("p",[n._v("​"),e("br"),n._v("\n​"),e("br"),n._v("\npackage com.jiangsu.nanjing;")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('import com.sun.net.httpserver.HttpExchange;\nimport com.sun.net.httpserver.HttpHandler;\nimport com.sun.net.httpserver.HttpServer;\nimport com.sun.net.httpserver.spi.HttpServerProvider;\n\nimport java.io.ByteArrayOutputStream;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.net.InetSocketAddress;\n\npublic class MyHttpHandler implements HttpHandler {\n    public static void main(String[] args){\n        startServer();\n    }\n\n    public static void startServer(){\n        try {\n            HttpServerProvider provider = HttpServerProvider.provider();\n            HttpServer server = provider.createHttpServer(new InetSocketAddress(8080), 10);\n            server.createContext("/test", new MyHttpHandler());\n            server.setExecutor(null);\n            server.start();\n            System.out.println("Http Server Start");\n        }catch (Exception e){\n            e.printStackTrace();\n        }\n    }\n\n    public void handle(HttpExchange exchange){\n        String  response = "I am fine, and you?";\n        byte[] byteResp = response.getBytes();\n        try(InputStream is = exchange.getRequestBody();\n            ByteArrayOutputStream baos = new ByteArrayOutputStream();\n            OutputStream os = exchange.getResponseBody();){\n            int i = -1;\n            while ((i = is.read()) != -1){\n                baos.write(i);\n            }\n            String request = baos.toString();\n            System.out.println("Request:"+request);\n            exchange.sendResponseHeaders(200, byteResp.length);\n            os.write(byteResp);\n            System.out.println("response:"+response);\n        }catch (Exception e){\n            e.printStackTrace();\n        }\n        exchange.close();\n    }\n}\n')])])]),e("p",[n._v("​")]),n._v(" "),e("h3",{attrs:{id:"httpclient"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#httpclient"}},[n._v("#")]),n._v(" HttpClient")]),n._v(" "),e("p",[n._v("HttpURLConnection要求开发者掌握太多技术细节，Apache旗下的HttpClient封装了大部分的编码细节。从Java11开始，JDK新增了自己的HttpClient框架也可实现文件的下载和上传。")]),n._v(" "),e("ul",[e("li",[e("p",[n._v("HttpClient：表示HTTP客户端，用于描述通用的客户端连接信息")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("HttpClient client = HttpClient.newHttpClient();\n")])])])]),n._v(" "),e("li",[e("p",[n._v("HttpRequest：表示HTTP请求过程，用于描述本次网络访问的请求信息")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("HttpRequest request = HttpRequest.newBuilder(URI.create(url)).build();\n")])])])]),n._v(" "),e("li",[e("p",[n._v("HttpResponse：表示HTTP应答过程")])])]),n._v(" "),e("p",[n._v("GET请求：")]),n._v(" "),e("p",[n._v("​"),e("br"),n._v("\npackage com.jiangsu.nanjing;")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('import java.net.URI;\nimport java.net.http.HttpClient;\nimport java.net.http.HttpHeaders;\nimport java.net.http.HttpRequest;\nimport java.net.http.HttpResponse;\n\npublic class TestHttpClient {\n    public static void main(String[] args){\n        testCallGet("https://hq.sinajs.cn/list=s_sh000001");\n    }\n\n    private static void testCallGet(String url){\n        HttpClient client = HttpClient.newHttpClient();\n        //客户端传递请求信息，且返回字符串形式的应答报文\n        HttpRequest request = HttpRequest.newBuilder(URI.create(url)).build();\n        try {\n            HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());\n            HttpHeaders headers = response.headers();\n            System.out.println(String.format("%s, %s, %s",\n                    headers.firstValue("Content-Length").orElse(null),\n                    headers.firstValue("Content-Type").orElse(null),\n                    headers.firstValue("Content-Encoding").orElse(null)));\n            System.out.println(String.format("%d, %s",\n                    response.statusCode(), response.body()));\n        }catch (Exception e){\n            e.printStackTrace();\n        }\n    }\n}\n')])])]),e("p",[n._v("​")]),n._v(" "),e("p",[n._v("POST请求：")]),n._v(" "),e("p",[n._v("​"),e("br"),n._v('\nprivate static void testCallPost(String url, String body){\nSystem.out.println("request:+body");\nHttpClient client = HttpClient.newHttpClient();\nHttpRequest request = HttpRequest.newBuilder(URI.create(url))\n.POST(HttpRequest.BodyPublishers.ofString(body))\n.header("Content-Type", "application/json").build();\ntry{\nHttpResponse'),e("String",[n._v(' response = client.send(request, HttpRequest.BodyPublishers.ofString());\nSystem.out.println(String.format("%d, %s", response.statusCode(), response.body()));\n}catch (Exception e){\ne.printStackTrace();\n}\n}')])],1),n._v(" "),e("h2",{attrs:{id:"套接字socket通信"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#套接字socket通信"}},[n._v("#")]),n._v(" 套接字Socket通信")]),n._v(" "),e("ol",[e("li",[e("p",[n._v("Socket:是一种支持TCP/IP协议的通信接口。")])]),n._v(" "),e("li",[e("p",[n._v("基于TCP协议（Transmission Control Protocol，传输控制协议）的Socket，在双方成功建立连接之后，不但可以传输文本，而且能够传输文件；基于UDP协议（User Datagram Protocol，用户数据报协议）的Socket，则无需确认连接即可传输数据 。")])]),n._v(" "),e("li",[e("p",[n._v("HTTP协议不够灵活，具体表现在：")]),n._v(" "),e("ol",[e("li",[n._v("HTTP连接属于短连接，每次访问操作结束之后，客户端会关闭本次连接。\n2. 服务端总是被动接收消息，无法主动向客户端推送消息。\n3. 属于客户端与服务端一对一交互，完全与第三者无关。\n4. 搭建专门的HTTP服务器，服务端比较重")])])]),n._v(" "),e("li",[e("p",[n._v("套接字属于长连接，只要连接的双方未调用close防范，也没退出程序，则理论上都处于连接状态。")])]),n._v(" "),e("li",[e("p",[n._v("TCP连接中，套接字的客户端需要给每个连接分配两个线程")]),n._v(" "),e("ol",[e("li",[n._v("一个专门用来向服务端发送信息\n2. 一个专门用于从服务端接收信息")])])]),n._v(" "),e("li",[e("p",[n._v("UDP连接中，批量向一群目标设备发送消息，是一个单向过程")])])])])}),[],!1,null,null,null);t.default=o.exports}}]);