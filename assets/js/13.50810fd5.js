(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{588:function(e,a,s){"use strict";s.r(a);var t=s(7),_=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"_2-程序的基本结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-程序的基本结构"}},[e._v("#")]),e._v(" 2 程序的基本结构")]),e._v(" "),s("h2",{attrs:{id:"_2-1-初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-初始化"}},[e._v("#")]),e._v(" 2.1 初始化")]),e._v(" "),s("p",[e._v("​"),s("br"),e._v("\nfrom flask import Flask  # 导入库\napp = Flask("),s("strong",[e._v("name")]),e._v(")    # Flask程序实例化")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("在Flask框架中，Web服务器使用WSGI协议把接收自客户端的请求都转给Flask类的对象处理")])]),e._v(" "),s("li",[s("p",[e._v("此处初始化的程序实例"),s("code",[e._v("app")]),e._v("，就是Flask类的对象")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("Flask()")]),e._v("为Flask类的构造函数，里面的参数"),s("code",[e._v("__name__")]),e._v("为必须指定的参数，表示程序的主模块或包的名字")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("__name__")]),e._v("是Python的一个内置类属性")])])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("* 当直接运行当前py文件（如`a.py`），`__name__`的值为`__main__`；\n* 当其他文件如`b.py`调`a.py`文件时，`__name__`就是`a.py`模块的名称，即`a`\n* [参考](https://blog.csdn.net/wosind/article/details/90728198)\n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[e._v("Flask用 "),s("strong",[e._v("name")]),e._v(" 这个参数确定程序的根目录，以便稍后能够找到相对于程序根目录的资源文件位置")])]),e._v(" "),s("h2",{attrs:{id:"_2-2-路由和视图函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-路由和视图函数"}},[e._v("#")]),e._v(" 2.2 路由和视图函数")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("路由 URL请求到Python函数的映射关系")])]),e._v(" "),s("li",[s("p",[e._v("修饰器")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("以修饰函数为输入的函数，可修改函数的行为")]),e._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("p",[e._v("通常使用修饰器把函数注册为事件的处理程序")]),e._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[e._v("例子")])]),e._v(" "),s("p",[e._v('def simple_decorator(f):\ndef wrapper():\nprint("Entering Function")\nf()\nprint("Exited Function")\nreturn wrapper')])])])])]),e._v(" "),s("p",[e._v('@simple_decorator\ndef hello():\nprint("Hello World")')]),e._v(" "),s("p",[e._v("hello()")]),e._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[s("p",[e._v("输出")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v(" Entering Function\n")])])])])]),e._v(" "),s("p",[e._v("Hello World\nExited Function")])]),e._v(" "),s("li",[s("p",[e._v("修饰器声明路由案例")]),e._v(" "),s("p",[e._v("@app.route('/')")])])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v('def index():\n   return "Hello"\n')])])]),s("p",[e._v("其中：")]),e._v(" "),s("ul",[s("li",[s("p",[s("code",[e._v("@")]),e._v("表示Python中的修饰器，")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("app")]),e._v("表示Flask类的程序实例")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("route")]),e._v("表示Flask类中的一个方法")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("'/'")]),e._v("表示输入参数")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("index()")]),e._v("是修饰器函数的输入")])])]),e._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[s("p",[e._v("手写一个静态"),s("code",[e._v("@app.route()")])]),e._v(" "),s("p",[e._v("class NotFlask():\ndef "),s("strong",[e._v("init")]),e._v("(self):\nself.routes = {}")]),e._v(" "),s("p",[e._v("def route(self, route_str):\ndef decorator(f):\nself.routes[route_str] = f\nreturn f\nreturn decorator")]),e._v(" "),s("p",[e._v('def serve(self, path):\nview_function = self.routes.get(path)\nif view_function:\nreturn view_function()\nelse:\nraise ValueError(\'Route "{}"" has not been registered\'.format(path))')])])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v('app = NotFlask()\n\n@app.route("/")\ndef hello():\n   return "Hello World!"\nprint(app.serve("/"))\n')])])]),s("p",[e._v("输出："),s("code",[e._v("Hello World!")]),e._v(" 参考：https://blog.csdn.net/fang_chuan/article/details/81874678")]),e._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[e._v("视图函数\n"),s("ol",[s("li",[s("p",[e._v("类似于"),s("code",[e._v("index()")]),e._v("这种")]),e._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("p",[e._v("视图函数的返回值称为 "),s("strong",[e._v("响应")])]),e._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("p",[e._v("可使用URL的动态部分作为视图函数的参数")]),e._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("    @app.route('/usr/')\n")])])])])]),e._v(" "),s("p",[e._v('def usr(name):\nreturn "Hello %s" % name')])])])])])]),e._v(" "),s("li",[s("p",[e._v("动态部分默认是字符串类型，也可以是int，float和path类型，path类型也是字符串，但不把斜线视作分隔符")])])])])]),e._v(" "),s("h2",{attrs:{id:"_2-3-启动服务器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-启动服务器"}},[e._v("#")]),e._v(" 2.3 启动服务器")]),e._v(" "),s("ol",[s("li",[s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("if __name__ == '__main__':\n")])])]),s("p",[e._v("app.run(debug=True)")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("__name__=='__main__'")]),e._v("确保直接执行这个脚本才启动开发Web服务器")])])]),e._v(" "),s("h2",{attrs:{id:"_2-4-一个完整的程序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-一个完整的程序"}},[e._v("#")]),e._v(" 2.4 一个完整的程序")]),e._v(" "),s("p",[e._v("​"),s("br"),e._v("\nfrom flask import Flask\napp = Flask("),s("strong",[e._v("name")]),e._v(")")]),e._v(" "),s("p",[e._v("​"),s("br"),e._v("\n@app.route('/')\ndef index():\nreturn \"Hello\"")]),e._v(" "),s("p",[e._v("​"),s("br"),e._v("\n@app.route('/usr/')\ndef usr(name):\nreturn \"Hello %s\" % name")]),e._v(" "),s("p",[e._v("​"),s("br"),e._v("\nif "),s("strong",[e._v("name")]),e._v(" == '"),s("strong",[e._v("main")]),e._v("':\napp.run(debug=True)")]),e._v(" "),s("p",[e._v("输出： "),s("img",{attrs:{src:"https://my-imags.oss-cn-shanghai.aliyuncs.com/pic/20210311102124.png",alt:""}}),e._v(" "),s("img",{attrs:{src:"https://my-imags.oss-cn-shanghai.aliyuncs.com/pic/20210311102204.png",alt:""}})]),e._v(" "),s("h2",{attrs:{id:"_2-5-请求-响应循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-请求-响应循环"}},[e._v("#")]),e._v(" 2.5 请求-响应循环")]),e._v(" "),s("p",[s("strong",[e._v("概念待补充...")])]),e._v(" "),s("ol",[s("li",[e._v("请求上下文")]),e._v(" "),s("li",[e._v("请求调度")]),e._v(" "),s("li",[e._v("请求钩子")]),e._v(" "),s("li",[e._v("响应")])]),e._v(" "),s("h2",{attrs:{id:"_2-6-flask扩展"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-flask扩展"}},[e._v("#")]),e._v(" 2.6 Flask扩展")]),e._v(" "),s("p",[e._v("Flask是轻量级框架，设计为可扩展形式，例如数据库和用户认证等，开发者可以自由选择最合适的包，或者按照需求自行开发。 "),s("strong",[e._v("使用Flask-\nScript支持命令行选项")])]),e._v(" "),s("ol",[s("li",[s("p",[e._v("效果：使用命令行参数传递设置选项")])]),e._v(" "),s("li",[s("p",[e._v("安装："),s("code",[e._v("conda install flask-script")])])]),e._v(" "),s("li",[s("p",[e._v("使用：")]),e._v(" "),s("p",[e._v("from flask import Flask")])])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("from flask_script import Manager\n\napp = Flask(__name__)\nmanager = Manager(app)\n")])])]),s("p",[e._v("​"),s("br"),e._v("\n@app.route('/')\ndef index():\nreturn \"Hello\"")]),e._v(" "),s("p",[e._v("​"),s("br"),e._v("\n@app.route('/usr/')\ndef usr(name):\nreturn \"Hello %s\" % name")]),e._v(" "),s("p",[e._v("​"),s("br"),e._v("\nif "),s("strong",[e._v("name")]),e._v(" == '"),s("strong",[e._v("main")]),e._v("':\nmanager.run()")]),e._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[s("p",[e._v("参数")]),e._v(" "),s("ol",[s("li",[s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("    usage: hello.py [-?] {shell,runserver} ...\n")])])])])]),e._v(" "),s("p",[e._v("positional arguments:\n{shell,runserver}\nshell            Runs a Python shell inside Flask application context.\nrunserver        Runs the Flask development server i.e. app.run()")]),e._v(" "),s("p",[e._v("optional arguments:\n-?, --help         show this help message and exit")]),e._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("p",[s("code",[e._v("shell")]),e._v("参数用于启动Python的Shell回话，"),s("code",[e._v("runserver")]),e._v("参数用于启动Web服务器")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("runserver")]),e._v("参数后还有很多可选参数")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("python hello.py runserver")]),e._v("：以调试模式启动Web服务器")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("python hello.py runserver --host 0.0.0.0")]),e._v("：让服务器监听公共网络接口上的连接，允许同网中的其他计算机连接服务器")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("python hello.py runserver --host 0.0.0.0 --threaded &")]),e._v("：开启多线程操作")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("   (MicroBlog) C:\\Users\\admin\\PycharmProjects\\MicroBlog>python hello.py runserver --help\n")])])]),s("p",[e._v("usage: hello.py runserver [-?] [-h HOST] [-p PORT] [--threaded] [--processes PROCESSES] [--passthrough-errors] [-d] [-D] [-r] [-R] [--ssl-crt SSL_CRT] [--ssl-key SSL_KEY]")])])]),e._v(" "),s("p",[e._v("Runs the Flask development server i.e. app.run()")]),e._v(" "),s("p",[e._v("optional arguments:\n-?, --help            show this help message and exit\n-h HOST, --host HOST\n-p PORT, --port PORT\n--threaded\n--processes PROCESSES\n--passthrough-errors\n-d, --debug           enable the Werkzeug debugger (DO NOT use in production code)\n-D, --no-debug        disable the Werkzeug debugger\n-r, --reload          monitor Python files for changes (not 100% safe for production use)\n-R, --no-reload       do not monitor Python files for changes\n--ssl-crt SSL_CRT     Path to ssl certificate\n--ssl-key SSL_KEY     Path to ssl key")])]),e._v(" "),s("li",[s("p",[e._v("设置Pycharm带参运行")]),e._v(" "),s("ol",[s("li",[s("img",{attrs:{src:"https://my-imags.oss-cn-shanghai.aliyuncs.com/pic/20210311110739.png",alt:""}}),e._v("\n2. "),s("img",{attrs:{src:"https://my-imags.oss-cn-shanghai.aliyuncs.com/pic/20210311110802.png",alt:""}})])])])]),e._v(" "),s("h2",{attrs:{id:"_2-7-待补充"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-待补充"}},[e._v("#")]),e._v(" 2.7 待补充")]),e._v(" "),s("ul",[s("li",[e._v("请求-响应循环")]),e._v(" "),s("li",[e._v("手写动态参数的修饰器")])])])}),[],!1,null,null,null);a.default=_.exports}}]);