(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{596:function(t,e,a){"use strict";a.r(e);var i=a(7),r=Object(i.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"文件读写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件读写"}},[t._v("#")]),t._v(" 文件读写")]),t._v(" "),a("h3",{attrs:{id:"文件与目录的管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件与目录的管理"}},[t._v("#")]),t._v(" 文件与目录的管理")]),t._v(" "),a("ol",[a("li",[t._v("遍历目录下的文件，list和listFiles")])]),t._v(" "),a("h3",{attrs:{id:"字符流读写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符流读写"}},[t._v("#")]),t._v(" 字符流读写")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("写入字符串")]),t._v(" "),a("p",[t._v("package com.jiangsu.nanjing;")])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('import java.io.File;\nimport java.io.FileWriter;\nimport java.io.IOException;\n\npublic class TestFile {\n   private static String mPath = "./test.txt";\n\n   public static void main(String[] args){\n       writeFileWithTry();\n   }\n\n   private static void writeFileWithTry(){\n       String str = "bairiyishanjin, huangheruhailiu.\\n";\n       File file = new File(mPath);\n       try (FileWriter writer = new FileWriter(file)){\n           writer.write(str);\n       }catch (IOException e){\n           e.printStackTrace();\n       }\n   }\n')])])]),a("p",[t._v("​"),a("br"),t._v("\n}")]),t._v(" "),a("p",[t._v("​")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("p",[t._v("读字符串")]),t._v(" "),a("p",[t._v("private static void readFileSimple(){\nFile file = new File(mPath);\ntry (FileReader reader = new FileReader(file)){\nchar[] temp = new char[(int) file.length()];//创建与文件大小等长的字符数组\nreader.read(temp);  //从文件读取数据到字节数组\nString content = new String(temp);\nSystem.out.println(content);\n}catch (IOException e){\ne.printStackTrace();\n}")]),t._v(" "),a("p",[t._v("}")])])]),t._v(" "),a("h3",{attrs:{id:"缓冲区读写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓冲区读写"}},[t._v("#")]),t._v(" 缓冲区读写")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("FileWiter和FileReader读写的数据以字符为单位，写的时候每次都是直接写入文件")])]),t._v(" "),a("li",[a("p",[t._v("BufferedWriter是先写入缓存，等到缓存写满了再讲缓存上的数据写入文件")])]),t._v(" "),a("li",[a("p",[t._v("使用缓存字符流写入文件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('  private static void writeBuffer(){\n  String str1 = "bairiyishanjin";\n  String str2 = "yuqiongqianlimu";\n  File file = new File(mPath);\n  try (Writer writer = new FileWriter(file);\n       BufferedWriter bwriter = new BufferedWriter(writer);){\n      bwriter.write(str1);\n      bwriter.newLine();\n      bwriter.write(str2);\n  }catch (Exception e){\n      e.printStackTrace();\n  }\n')])])]),a("p",[t._v("}")])]),t._v(" "),a("li",[a("p",[t._v("使用缓存字符流读文件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("  private static void readBuffer(){\n  File file = new File(mPath);\n  try (Reader reader = new FileReader(file);\n  BufferedReader breader = new BufferedReader(reader);){\n      for (int i=1; ;i++){\n          String line = breader.readLine();\n          if (line == null){\n              break;\n          }\n          System.out.println(line);\n      }\n  }catch (Exception e){\n      e.printStackTrace();\n  }\n")])])]),a("p",[t._v("}")])])]),t._v(" "),a("h3",{attrs:{id:"随机访问文件的读写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#随机访问文件的读写"}},[t._v("#")]),t._v(" 随机访问文件的读写")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("对大文件追加数据的操作，可使用专门的文件修改工具RandomAccessFile")]),t._v(" "),a("p",[t._v('private static void appendStr(){\ntry (RandomAccessFile raf = new RandomAccessFile(mPath, "rw")){\nlong length = raf.length();\nraf.seek(length);  //定位到指定长度的位置\nString str = "Hello World.";\nraf.write(str.getBytes());\n}catch (Exception e){\ne.printStackTrace();\n}\n}')])])]),t._v(" "),a("h2",{attrs:{id:"i-o输入输出流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#i-o输入输出流"}},[t._v("#")]),t._v(" I/O输入输出流")]),t._v(" "),a("p",[t._v("基于字节流方式的文件输入输出处理")]),t._v(" "),a("h3",{attrs:{id:"文件i-o字节流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件i-o字节流"}},[t._v("#")]),t._v(" 文件I/O字节流")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("文件字节流")]),t._v(" "),a("ol",[a("li",[t._v("文件输出流：FileOutputStream，将数据写入文件\n2. 文件输入流：FileInputStream，从文件读取数据")])])]),t._v(" "),a("li",[a("p",[t._v("写文件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('  private static void writeFile(){\n  String str = "bairiyishanjin,huangheruhailiu.\\nyuqiongqianlimu,gengshangyicenglou";\n  try(FileOutputStream fos = new FileOutputStream(mPath)){\n      fos.write(str.getBytes());\n  }catch (Exception e){\n      e.printStackTrace();\n  }\n')])])]),a("p",[t._v("}")])]),t._v(" "),a("li",[a("p",[t._v("读文件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("  private static void readFile(){\n  try (FileInputStream fis = new FileInputStream(mPath)){\n      byte[] bytes = new byte[fis.available()];//available获得文件大小\n      fis.read(bytes);\n      String content = new String(bytes);\n      System.out.println(content);\n  }catch (Exception e){\n      e.printStackTrace();\n  }\n")])])]),a("p",[t._v("}")])])]),t._v(" "),a("h3",{attrs:{id:"缓存i-o字节流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存i-o字节流"}},[t._v("#")]),t._v(" 缓存I/O字节流")]),t._v(" "),a("p",[t._v("文件输出流FileOutputStream是直接写到磁盘，性能较低，所以便有了文件输出流的缓存兄弟")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("缓存输出流写文件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('  private static void writeBuffer(){\n  String str = "bairiyishanjin.";\n  try (FileOutputStream fos = new FileOutputStream(mPath);\n  BufferedOutputStream bos = new BufferedOutputStream(fos)){\n      bos.write(str.getBytes());\n  }catch (Exception e){\n      e.printStackTrace();\n  }\n')])])]),a("p",[t._v("}")])]),t._v(" "),a("li",[a("p",[t._v("缓存输入流读文件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("  private static void readBuffer(){\n  try (FileInputStream fis = new FileInputStream(mPath);\n  BufferedInputStream bis = new BufferedInputStream(fis)){\n      byte[] bytes = new byte[bis.available()];\n      bis.read(bytes);\n      String content = new String(bytes);\n      System.out.println(content);\n  }catch (Exception e){\n      e.printStackTrace();\n  }\n")])])]),a("p",[t._v("}")])])]),t._v(" "),a("h3",{attrs:{id:"对象序列化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象序列化"}},[t._v("#")]),t._v(" 对象序列化")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("把程序运行中的内存数据临时保存到文件")])]),t._v(" "),a("li",[a("p",[t._v("序列化：内存对象转换成磁盘文件数据的过程")])]),t._v(" "),a("li",[a("p",[t._v("反序列化：把磁盘文件内容转成内存对象的过程")])]),t._v(" "),a("li",[a("p",[t._v("声明对象的来源类是可序列化的")]),t._v(" "),a("p",[t._v("package com.jiangsu.nanjing;")])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("import java.io.Serializable;\n\npublic class UserInfo implements Serializable { //Serializable接口表示当前类支持序列化\n   private String name;\n   private String phone;\n   private String password;\n}\n")])])]),a("ol",{attrs:{start:"5"}},[a("li",[a("p",[t._v("对象输入输出流")])]),t._v(" "),a("li",[a("p",[t._v("将对象信息写入文件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('  private static void writeObject(){\n  UserInfo user = new UserInfo();\n  user.setName("wang wu");\n  user.setPhone("15565151");\n  user.setPassword("123456");\n  try (FileOutputStream fos = new FileOutputStream(mPath);\n  ObjectOutputStream oos = new ObjectOutputStream(fos)){\n      oos.writeObject(user);\n  }catch (Exception e){\n      e.printStackTrace();\n  }\n')])])]),a("p",[t._v("}")])]),t._v(" "),a("li",[a("p",[t._v("从文件读取对象信息")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("  private static void readObject(){\n  UserInfo user = new UserInfo();\n  try (FileInputStream fos = new FileInputStream(mPath);\n  ObjectInputStream ois = new ObjectInputStream(fos)){\n      user = (UserInfo) ois.readObject();\n  }catch (Exception e){\n      e.printStackTrace();\n  }\n  System.out.println(user.getName());\n")])])]),a("p",[t._v("}")])])]),t._v(" "),a("h3",{attrs:{id:"i-o流处理简单的数据压缩"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#i-o流处理简单的数据压缩"}},[t._v("#")]),t._v(" I/O流处理简单的数据压缩")]),t._v(" "),a("p",[t._v("两个过程：")]),t._v(" "),a("ul",[a("li",[t._v("压缩 - 写入")]),t._v(" "),a("li",[t._v("读取 - 解压")])]),t._v(" "),a("h2",{attrs:{id:"nio文件编程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nio文件编程"}},[t._v("#")]),t._v(" NIO文件编程")]),t._v(" "),a("p",[t._v("NIO：Non-Blocking IO 非阻塞的IO，传统的流式IO又被称作BIO，Blocking IO\n阻塞和非阻塞就比如私家车和出租车，考虑下资源的配置")]),t._v(" "),a("h3",{attrs:{id:"文件通道filechannel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件通道filechannel"}},[t._v("#")]),t._v(" 文件通道FileChannel")]),t._v(" "),a("p",[t._v("通道中数据允许双向流动，相当于集成了FileInputStream和FileOutputStream")]),t._v(" "),a("h3",{attrs:{id:"字节缓存bytebuffer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字节缓存bytebuffer"}},[t._v("#")]),t._v(" 字节缓存ByteBuffer")]),t._v(" "),a("p",[t._v("位于通道内部的存储空间 是内存中的字节数组与磁盘中的文件交互的中间件")]),t._v(" "),a("h3",{attrs:{id:"文件通道的性能优势"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件通道的性能优势"}},[t._v("#")]),t._v(" 文件通道的性能优势")]),t._v(" "),a("p",[t._v("复制文件，直接是字节缓存和磁盘之间的操作，不涉及内存，性能比较好")]),t._v(" "),a("h3",{attrs:{id:"路径工具paths和files"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路径工具paths和files"}},[t._v("#")]),t._v(" 路径工具Paths和Files")]),t._v(" "),a("p",[t._v("路径组工具：Paths 路径工具：path 文件组工具：Paths walk方法：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("遍历指定目录以及深度在5层之内的子目录")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("  private static void getDir(){\n  try {\n      Path path = Paths.get(mPath);\n      List<String> dirs = Files.walk(path, 5)\n              .filter(Files::isDirectory)  //只挑选目录\n              .map(it -> it.toString())  //获取目录的路径名称\n              .collect(Collectors.toList());  //返回清单格式\n      System.out.println(dirs);\n  }catch (Exception e){\n      e.printStackTrace();\n  }\n")])])]),a("p",[t._v("}")])]),t._v(" "),a("li",[a("p",[t._v("挑选出目录下所有的PNG图片")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('  private static void selectPNG(){\n  try {\n      Path path = Paths.get(mPath);\n      List<String> pngs = Files.walk(path, 5)\n              .filter(it -> it.toFile().isFile()).filter(it -> it.endsWith(".png"))\n              .map(it -> it.toString()).collect(Collectors.toList());\n      System.out.println(pngs);\n  }catch (Exception e){\n      e.printStackTrace();\n  }\n')])])]),a("p",[t._v("}")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);